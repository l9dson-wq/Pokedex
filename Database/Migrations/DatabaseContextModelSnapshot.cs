// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Imagepath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PrimaryType_Id")
                        .HasColumnType("int");

                    b.Property<int>("Region_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SecundaryType_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrimaryType_Id");

                    b.HasIndex("Region_Id");

                    b.HasIndex("SecundaryType_Id");

                    b.ToTable("Pokemons", (string)null);
                });

            modelBuilder.Entity("Database.Models.Pokemon_type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("pokemon_types", (string)null);
                });

            modelBuilder.Entity("Database.Models.Pokemon_type2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("pokemon_type2");
                });

            modelBuilder.Entity("Database.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Regions", (string)null);
                });

            modelBuilder.Entity("Database.Models.Pokemon", b =>
                {
                    b.HasOne("Database.Models.Pokemon_type", "Pokemon_type")
                        .WithMany("Pokemones")
                        .HasForeignKey("PrimaryType_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Region", "Region")
                        .WithMany("Pokemones")
                        .HasForeignKey("Region_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Pokemon_type2", "Secundary_pokemonType")
                        .WithMany("Pokemones")
                        .HasForeignKey("SecundaryType_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Pokemon_type");

                    b.Navigation("Region");

                    b.Navigation("Secundary_pokemonType");
                });

            modelBuilder.Entity("Database.Models.Pokemon_type", b =>
                {
                    b.Navigation("Pokemones");
                });

            modelBuilder.Entity("Database.Models.Pokemon_type2", b =>
                {
                    b.Navigation("Pokemones");
                });

            modelBuilder.Entity("Database.Models.Region", b =>
                {
                    b.Navigation("Pokemones");
                });
#pragma warning restore 612, 618
        }
    }
}
